name: Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GITHUB_HASH: $(git rev-parse --short "$GITHUB_SHA")
  ACCESS_KEY_ID: ${{secrets.ACCESS_KEY_ID}}
  SECRET_ACCESS_KEY: ${{secrets.SECRET_ACCESS_KEY}}
  SESSION_TOKEN: ${{secrets.SESSION_TOKEN}}

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Login Dockerhub
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - name: Build the Docker image
      run: docker build -t csg1-centraldeoportunidades-python .
    - name: Tag the image
      run: docker tag csg1-centraldeoportunidades-python:latest pchong77/csg1-centraldeoportunidades-python:${{env.GITHUB_HASH}}
    - name: Push to Dockerhub
      run: docker push pchong77/csg1-centraldeoportunidades-python:${{env.GITHUB_HASH}}

    # defaults: 
    #   run:
    #     shell:
    #     working-directory: ./infra
      
    # - name: Set up Terraform
    #   uses: hashicorp/setup-terraform@v1
    #   with:
    #     terraform_version: 1.6.5

    # - name: Configure AWS credentials from AWS account
    #   run:
    #     echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
    #     echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
    #     echo "AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}" >> $GITHUB_ENV

    # - name: Terraform init
    #   id: init
    #   run: terraform init

    # - name: Terraform plan
    #   id: plan
    #   run: terraform plan -no-color

    # - name: Terraform plan status
    #   if: steps.plan.outcome == 'failure'
    #   run: exit 1

    # - name: Terraform apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform apply