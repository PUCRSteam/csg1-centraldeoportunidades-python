name: Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GITHUB_HASH: $(git rev-parse --short "$GITHUB_SHA")

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Login Dockerhub
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - name: Build the Docker image
      run: docker build -t csg1-centraldeoportunidades-python .
    - name: Tag the image
      run: docker tag csg1-centraldeoportunidades-python:latest pchong77/csg1-centraldeoportunidades-python:${{env.GITHUB_HASH}}
    - name: Push to Dockerhub
      run: docker push pchong77/csg1-centraldeoportunidades-python:${{env.GITHUB_HASH}}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:

    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Checkout Repo
      uses: actions/checkout@v1

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.5

    - name: Terraform Init
      run: terraform init
      working-directory: ./infra

    - name: Terraform Validate
      run: terraform validate -no-color
      working-directory: ./infra

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color    
      continue-on-error: true
      working-directory: ./infra

    - name: Terraform Apply
      run: terraform apply
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ACCESS_KEY_ID:  ${{ secrets.ACCESS_KEY_ID }}
        SECRET_ACCESS_KEY:  ${{ secrets.SECRET_ACCESS_KEY }}
        SESSION_TOKEN: ${{ secrets.SESSION_TOKEN }}
      working-directory: ./infra